---
import styles from "./Example.module.css";

const { language, source } = Astro.props;
---

<picolight-scheme data-language={language} data-source={source}>
  <pre class={styles.main}><code /></pre>
</picolight-scheme>
<script>
  import { highlight } from "picolight";
  import { scheme } from "picolight/languages/scheme";
  import { githubDark } from "picolight/themes/github-dark";
  import { githubLight } from "picolight/themes/github-light";

  customElements.define(
    "picolight-scheme",
    class extends HTMLElement {
      async connectedCallback(): Promise<void> {
        const { language, source } = this.dataset;

        if (!language || !source) {
          throw new Error("Props missing");
        }

        const pre = this.querySelector("pre");
        const code = this.querySelector("code");

        if (!pre || !code) {
          throw new Error("Root elements missing");
        }

        const update = (dark: boolean): void => {
          const theme = dark ? githubDark : githubLight;

          pre.style = `background:${theme.back}`;
          code.innerHTML = highlight(source, scheme, theme).outerHTML;
        };

        const query = window.matchMedia("(prefers-color-scheme: dark)");

        update(query.matches);

        query.addEventListener("change", ({ matches }) => update(matches));
      }
    },
  );
</script>
