---
import "picolight";
import styles from "./Scheme.module.css";

const source = `
(import (scheme base))

; This is a comment.

(define xs '(#f #t ()))

(define ys '(import export import-export))

(define (fibonacci 10)
  (if (< x 2)
    x
    (+
      (fibonacci (- x 1))
      (fibonacci (- x 2)))))

(write-string "Hello, World!")

(write-string "\\n\\r\\t\\"\\\\")
`.trim();
---

<picolight-scheme data-source={source}>
  <pre class={styles.main}><code /></pre>
</picolight-scheme>
<script>
  import { highlight } from "picolight";
  import { scheme } from "picolight/languages/scheme";
  import { githubDark } from "picolight/themes/github-dark";
  import { githubLight } from "picolight/themes/github-light";

  customElements.define(
    "picolight-scheme",
    class extends HTMLElement {
      async connectedCallback(): Promise<void> {
        const { source = "" } = this.dataset;
        const pre = this.querySelector("pre");
        const code = this.querySelector("code");

        if (!pre || !code) {
          throw new Error("root elements missing");
        }

        const update = (dark: boolean): void => {
          const theme = dark ? githubDark : githubLight;

          pre.style = `background:${theme.back}`;
          code.innerHTML = highlight(source, scheme, theme).outerHTML;
        };

        const query = window.matchMedia("(prefers-color-scheme: dark)");

        update(query.matches);

        query.addEventListener("change", ({ matches }) => update(matches));
      }
    },
  );
</script>
